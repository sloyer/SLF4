///Foundation Setting go here


//// Media Queries

$small-screen: 768px;
// $medium-screen: 1280px;
// $large-screen: 1440px;

// $medium: "only screen and (min-width: #{$medium-screen})";
// $large: "only screen and (min-width: #{$large-screen})";
// $landscape: "only screen and (orientation: landscape)";
// $portrait: "only screen and (orientation: portrait)";

$screen: "only screen";
$small: "only screen and (min-width: #{$small-screen})";


//// Foundation Variables

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
// $base-line-height: 150%;

// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}


//
// Grid Variables
//

 $row-width: emCalc(1000);
 $column-gutter: emCalc(30);
 $total-columns: 12;

//
// Block Grid Variables
//

// We use this to control the maximum number of block grid elements per row

// $block-grid-elements: 12;
// $block-grid-default-spacing: emCalc(20);

// Enables media queries for block-grid classes. Set to false if writing semantic HTML.

// $block-grid-media-queries: true;


